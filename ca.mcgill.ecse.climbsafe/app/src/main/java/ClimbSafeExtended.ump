
class Member{
  enum BanStatus {Banned, NotBanned}
  BanStatus banStatus = BanStatus.NotBanned; 
}

class Assignment{
  depend ca.mcgill.ecse.climbsafe.model.Member.BanStatus;
  depend ca.mcgill.ecse.climbsafe.application.ClimbSafeApplication;
  lazy String authorizationCode;
  lazy Integer refundPercentage;
  Integer totalEquipmentCost = 0;
  Integer totalGuideCost = 0;
  public void setAssignmentState(AssignmentStatus status){
      setAssignmentStatus(status);
      }

  public void assignmentEquipmentCost(){
    ClimbSafe cs= ClimbSafeApplication.getClimbSafe();
        int sum=0;
        
        for (BookedItem item : this.member.getBookedItems()) {
				// if it is a bundle, compute bundle cost
				if (item.getItem() instanceof EquipmentBundle) {
					double bundleCost = 0;
					EquipmentBundle equipmentBundle = (EquipmentBundle) item.getItem();
					for (BundleItem bI : equipmentBundle.getBundleItems()) {
						Equipment e = bI.getEquipment();
						bundleCost += e.getPricePerWeek() * bI.getQuantity();
					}
					if (this.member.getGuideRequired()) {
						bundleCost = bundleCost * (100.0 - equipmentBundle.getDiscount()) /100.0;
					}
					sum += bundleCost * item.getQuantity();
				} else if (item.getItem() instanceof Equipment) {
					Equipment e = (Equipment) item.getItem();
					sum += e.getPricePerWeek() * item.getQuantity();
				}
                 
        }


        sum *= this.getMember().getNrWeeks();//sum is weekly sum until multiplied by number of weeks
        this.setTotalEquipmentCost(sum);
        
  }
  
  public void assignmentGuideCost(){
      ClimbSafe cs= ClimbSafeApplication.getClimbSafe();
      int sum = 0;
      if (this.getMember().getGuideRequired()){
          sum += cs.getPriceOfGuidePerWeek() * this.getMember().getNrWeeks();
          this.setTotalGuideCost(sum);
      }
  }
  
  public void assignmentCost(){
      assignmentGuideCost();
      assignmentEquipmentCost();

      
      }}